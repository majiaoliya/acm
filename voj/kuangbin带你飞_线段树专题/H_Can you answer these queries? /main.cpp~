#include <iostream>
#include <math.h>
#define ll long long int
using namespace std;

const int maxn = 200005;
int n, m;
ll sum[maxn<<2], mx[maxn<<2], lazy[maxn<<2];

void push_up(int x) {
	sum[x] = sum[x<<1] + sum[x<<1|1];
	mx[x] = max(mx[x<<1], mx[x<<1|1]);
}

void build(int x, int lef, int rig) {
	if(lef == rig) {
		scanf("%lld", sum+x);
		mx[x] = sum[x];
		return ;
	}
	int mid = (lef+rig) >> 1;
	build(x<<1, lef, mid);
	build(x<<1|1, mid+1, rig);
	push_up(x);
}

void update(int x, int lef, int rig, int L, int R) { //区间更新
	if(lef == rig) {
		sum[x] = (ll) sqrt(1.*sum[x]);
		mx[x] = sum[x];
		return ;
	}
	if(L<=lef && rig<=R && mx[x]==1) return;
	int mid = (lef+rig) >> 1;
	if(L<=mid) update(x<<1, lef, mid, L, R);
	if(mid<R) update(x<<1|1, mid+1, rig, L, R);
	push_up(x);
}

ll query(int x, int lef, int rig, int L, int R) {
	if(L<=lef && rig<=R) return sum[x];
	ll mid = (lef+rig) >> 1, ret = 0;
	if(L<=mid) ret += query(x<<1, lef, mid, L, R);
	if(mid<R) ret += query(x<<1|1, mid+1, rig, L, R);
	return ret;
}

int main(void) {
	freopen("test", "r", stdin);
	for(int t=1; EOF != scanf("%d", &n); t++) {
		printf("Case #%d:\n", t);
		build(1, 1, n);
		scanf("%d", &m);
		int L, R, cmd;
		while(m--) {
			scanf("%d %d %d", &cmd, &L, &R);
			if(!cmd) { //攻击
				update(1, 1, n, min(L, R), max(L, R));
			} else {
				printf("%lld\n", query(1, 1, n, min(L, R), max(L, R)));
			}
		}
		printf("\n");
	}
	return 0;
}
