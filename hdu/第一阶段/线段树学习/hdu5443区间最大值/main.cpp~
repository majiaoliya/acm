#include <iostream>
#include <string.h>
#define MAXN 100005
#define ll long long 
using namespace std;

int tree[MAXN<<2], t, n, m, L, R, q, arr[MAXN];
const int INF = 1e6+10;

void push_up(int x) { tree[x] = max(tree[x<<1], tree[x<<1|1]); }

void build(int x, int lef, int rig) {
	if(lef == rig) {
		tree[x] = arr[lef];
		return ;
	}
	int mid = (lef + rig) >> 1;
	build(x<<1, lef, mid);
	build(x<<1|1, mid+1, rig);
	push_up(x);
}

int query(int x, int lef, int rig, int l, int R) {
	if(L<=lef && rig<=R) return tree[x];
	int mid = (lef+rig) >> 1, rs = 0;
	if(L<=mid) rs = max(rs, query(x<<1, lef, mid, L, R));
	if(mid<R) rs = max(rs, query(x<<1|1, mid+1, rig, L, R));
	return rs;
}

int main(void) {
	freopen("test", "r", stdin);
	scanf("%d", &t);
	for(int cases=1; cases<=t; cases++) {
//		printf("cases %d:\n", cases);
		scanf("%d", &n);
		for(int i=1; i<=n; i++)
			scanf("%d", arr+i);
		build(1, 1, n);
		scanf("%d", &q);
		while(q--) {
			scanf("%d%d", &L, &R);
			printf("%d\n", query(1, 1, n, L, R));
		}
	}

	return 0;
}
